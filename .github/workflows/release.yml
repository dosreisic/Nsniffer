name: Build and Release DEB Packages

on:
  push:
    tags:
      - "v*.*.*"
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up build environment
      run: sudo apt update && sudo apt install -y build-essential devscripts dh-make

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Build DEB package
      run: |
        PACKAGE_NAME="nsniffer"
        BUILD_DIR="${PACKAGE_NAME}_pkg"
        VERSION="$VERSION" # Usa la versión extraída del paso anterior
        ARCHITECTURE="${{ matrix.architecture }}"
        INSTALL_PATH="/usr/local/bin"
        DEPENDENCIES="bash, tshark, arp-scan, dsniff"

        if [ -e "$BUILD_DIR" ]; then
          rm -rf "$BUILD_DIR"
        fi

        # Crear estructura del paquete
        mkdir -p $BUILD_DIR/DEBIAN
        mkdir -p $BUILD_DIR/$INSTALL_PATH

        # Crear archivo de control
        cat << EOF > $BUILD_DIR/DEBIAN/control
        Package: $PACKAGE_NAME
        Version: $VERSION
        Architecture: $ARCHITECTURE
        Maintainer: vorosdev@gmail.com
        Description: Simple tool for capturing and analyzing network packets
        Depends: $DEPENDENCIES
        EOF

        # Copiar el script principal al paquete
        cp ./nsniffer $BUILD_DIR/$INSTALL_PATH/nsniffer
        chmod +x $BUILD_DIR/$INSTALL_PATH/nsniffer

        # Crear script postinst
        cat << 'EOF' > $BUILD_DIR/DEBIAN/postinst
        #!/bin/bash
        chmod +x /usr/local/bin/nsniffer
        EOF
        chmod +x $BUILD_DIR/DEBIAN/postinst

        # Generar el paquete .deb
        dpkg-deb --build $BUILD_DIR
        mv $BUILD_DIR.deb ./${PACKAGE_NAME}_${VERSION}_${ARCHITECTURE}.deb

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          nsniffer_${{ env.VERSION }}_amd64.deb
          nsniffer_${{ env.VERSION }}_arm64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
